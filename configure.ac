AC_PREREQ(2.59)
AC_COPYRIGHT([Copyright (c) 2011-2014 Varnish Software AS])
AC_INIT([libvmod-curl], [0.2])
AC_CONFIG_MACRO_DIR([m4])
AC_CONFIG_SRCDIR(src/vmod_curl.vcc)
AM_CONFIG_HEADER(config.h)

AC_CANONICAL_SYSTEM
AC_LANG(C)

AM_INIT_AUTOMAKE([foreign])

AC_GNU_SOURCE
AC_PROG_CC
AC_PROG_CC_STDC
if test "x$ac_cv_prog_cc_c99" = xno; then
	AC_MSG_ERROR([Could not find a C99 compatible compiler])
fi
AC_PROG_CPP

AC_PROG_INSTALL
AC_PROG_LIBTOOL
AC_PROG_MAKE_SET

# Check for rst utilities
AC_CHECK_PROGS(RST2MAN, [rst2man rst2man.py], "no")
if test "x$RST2MAN" = "xno"; then
	AC_MSG_WARN([rst2man not found - not building man pages])
fi
AM_CONDITIONAL(HAVE_RST2MAN, [test "x$RST2MAN" != "xno"])

# Check for pkg-config
PKG_PROG_PKG_CONFIG
PKG_CHECK_MODULES([CURL], [libcurl])

# Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS([sys/stdlib.h])

# Check for python
AC_CHECK_PROGS(PYTHON, [python3 python3.1 python3.2 python2.7 python2.6 python2.5 python2 python], "no")
if test "x$PYTHON" = "xno"; then
	AC_MSG_ERROR([Python is needed to build this vmod, please install python.])
fi

# Varnish include files tree
VARNISH_VMOD_INCLUDES
VARNISH_VMOD_DIR
VARNISH_VMODTOOL

AC_PATH_PROG([VARNISHTEST], [varnishtest])
AC_PATH_PROG([VARNISHD], [varnishd], [varnishd], [/sbin:/usr/sbin:/usr/local/sbin:$PATH])

# check if curl supports ms timeout settings
save_CFLAGS="${CFLAGS}"
save_LIBS="${LIBS}"
CFLAGS="${CFLAGS} ${CURL_CFLAGS}"
LIBS="${LIBS} ${CURL_LIBS}"
AC_CACHE_CHECK([for curl ms timeout settings],
  [ac_cv_curl_ms_timeout],
  [AC_RUN_IFELSE(
    [AC_LANG_PROGRAM([[
#include <stdio.h>
#include <curl/curl.h>
    ]],[[
CURL *curl_handle;
curl_handle = curl_easy_init();
curl_easy_setopt(curl_handle, CURLOPT_TIMEOUT_MS, 10);
curl_easy_setopt(curl_handle, CURLOPT_CONNECTTIMEOUT_MS, 10);
return (0);
    ]])],
    [ac_cv_curl_ms_timeout=yes],
    [ac_cv_curl_ms_timeout=no])
  ])
if test "$ac_cv_curl_ms_timeout" = yes; then
	AC_DEFINE([CURL_TIMEOUTMS_WORKS], [1], [Define if curl supports ms timeout])
fi
CFLAGS="${save_CFLAGS}"
LIBS="${save_LIBS}"

AC_CONFIG_FILES([
	Makefile
	src/Makefile
	man/Makefile
])
AC_OUTPUT
